{"version":3,"sources":["common/Button/styles.js","common/Button/index.js","common/PreviewImage/index.js","components/ContentBlock/FormContentBlock/styles.js","components/ContentBlock/FormContentBlock/index.js","common/Input/styles.js","common/Input/index.js","pages/Home/index.js"],"names":["Button","styled","button","props","color","width","children","onClick","PreviewImage","src","height","alt","with","style","FormBlockContainer","section","Content","p","ContentWrapper","div","FormEntryWrapper","form","span","withTranslation","title","icon","content","t","id","useForm","state","handleSubmit","type","justify","align","lg","md","sm","xs","left","succeeded","onSubmit","Input","name","placeholder","value","onChange","disabled","submitting","field","prefix","errors","right","className","Container","input","htmlFor","spellcheck","lazy","ScrollToTop","Home","first","IntroContent","text"],"mappings":"2IAEaA,E,KAASC,EAAOC,OAAV,0dACH,SAACC,GAAD,OAAWA,EAAMC,OAAS,aAC/B,SAACD,GAAD,OAAYA,EAAMC,MAAQ,UAAY,UAIrC,SAACD,GAAD,OAAYA,EAAMC,MAAQ,oBAAsB,SAS/C,SAACD,GAAD,OAAYA,EAAME,MAAQ,QAAU,UAIpC,SAACF,GAAD,OAAYA,EAAME,MAAQ,QAAU,UAIpC,SAACF,GAAD,OAAYA,EAAME,MAAQ,QAAU,U,OCjBlCL,UANA,SAAC,GAAD,IAAGI,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,QAA3B,OACb,cAAC,EAAD,CAAUH,MAAOA,EAAOC,MAAOA,EAAOE,QAASA,EAA/C,SACGD,M,8HCAUE,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKJ,EAAR,EAAQA,MAAOK,EAAf,EAAeA,OAAf,OACnB,qBAAKD,IAAG,mBAAcA,GAAOE,IAAKF,EAAKG,KAAMP,EAAOK,OAAQA,EAAQG,MAAO,CAACR,MAAO,MAAOK,OAAQ,U,gCCCvFI,EAAqBb,IAAOc,QAAV,8JASlBC,EAAUf,IAAOgB,EAAV,wDAIPC,EAAiBjB,IAAOkB,IAAV,mJASdC,EAAmBnB,IAAOkB,IAAV,sGAMGlB,IAAOkB,IAAV,gDAINlB,IAAOc,QAAV,yFAMSd,IAAOkB,IAAV,0GAMDlB,IAAOoB,KAAV,mKASFpB,IAAOqB,KAAV,oLAScrB,IAAOkB,IAAV,sJCuBbI,mBA5EG,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAwBC,GAAkB,EAAnCC,QAAmC,EAA1BxB,OAA0B,EAAlBuB,MAAME,EAAY,EAAZA,EAAGC,EAAS,EAATA,GAAS,EAO/BC,YAAQ,YAPuB,mBAOtDC,EAPsD,KAO/CC,EAP+C,KAW7D,OACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAKC,KAAK,OAAOC,QAAQ,gBAAgBC,MAAM,SAASN,GAAIA,EAA5D,UACE,cAAC,IAAD,CAAKO,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOC,MAAI,EAAX,SACE,eAAC,EAAD,WACE,6BAAKZ,EAAEH,KACP,cAAC,EAAD,UAEI,mHAGJ,cAAC,EAAD,UACIM,EAAMU,UAEJ,8FADA,8EAGLV,EAAMU,UACL,wBAEA,uBAAMC,SAAUV,EAAhB,UACE,eAAC,EAAD,WACE,cAACW,EAAA,QAAD,CACEV,KAAK,QACLW,KAAK,QACLf,GAAG,GACHgB,YAAY,mBACZC,MAAO,GACPC,SAAU,eAEZ,cAAC9C,EAAA,QAAD,CACEgC,KAAK,SACLe,SAAUjB,EAAMkB,WAEhB3C,MAAM,OAJR,SAMGsB,EAAE,kBAHEC,MAMT,cAAC,IAAD,CACEf,MAAO,CAAET,MAAO,OAChB6C,MAAM,QACNC,OAAO,QACPC,OAAQrB,EAAMqB,mBAO1B,cAAC,IAAD,CAAKhB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOc,OAAK,EAAZ,SACE,cAAC,EAAD,CACE3C,IAAKgB,EACL4B,UAAU,oBACVhD,MAAM,OACNK,OAAO,sB,unBC5ER4C,EAAYrD,IAAOkB,IAAV,4FAMTuB,EAAQzC,IAAOsD,MAAV,2Y,OCSHhC,yBAbD,SAAC,GAAD,IAAGK,EAAH,EAAGA,GAAIe,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAaE,EAA1B,EAA0BA,SAAUnB,EAApC,EAAoCA,EAApC,OACZ,eAAC,EAAD,WACE,uBAAO6B,QAASb,EAAhB,SAAuBhB,EAAEC,KACzB,cAAC,EAAD,CACE6B,WAAW,QACXb,YAAajB,EAAEiB,GACfD,KAAMA,EACNf,GAAIe,EACJG,SAAUA,W,gCCZhB,gFAaMQ,EAAYI,gBAAK,kBAAM,iCACvBC,EAAcD,gBAAK,kBAAM,iCAwDhBE,UAtDF,WACX,OACE,eAACN,EAAD,WACE,cAACK,EAAD,IACA,cAAC,IAAD,CACE3B,KAAK,QACL6B,MAAM,OACNrC,MAAOsC,EAAatC,MACpBE,QAASoC,EAAaC,KACtB7D,OAAQ4D,EAAa5D,OACrBuB,KAAK,YACLG,GAAG,WAGJ","file":"static/js/0.ef5bf72d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background: ${(props) => props.color || '#2e186a'};\r\n  color: ${(props) => (props.color ? '#2E186A' : '#fff')};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: ${(props) => (props.color ? '1px solid #2E186A' : '0px')};\r\n  border-radius: 8px;\r\n  height: 60px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    width: ${(props) => (props.width ? '160px' : '100%')};\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    width: ${(props) => (props.width ? '140px' : '100%')};\r\n  }\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    width: ${(props) => (props.width ? '130px' : '100%')};\r\n  }\r\n`;\r\n","import * as S from \"./styles\";\r\n\r\nconst Button = ({ color, width, children, onClick }) => (\r\n  <S.Button color={color} width={width} onClick={onClick}>\r\n    {children}\r\n  </S.Button>\r\n);\r\n\r\nexport default Button;\r\n","const PreviewImage = ({ src, width, height }) => (\r\n  <img src={`/img/svg/${src}`} alt={src} with={width} height={height} style={{width: \"90%\", height: \"90%\"}} />\r\n);\r\n\r\nexport default PreviewImage;\r\n","import styled from 'styled-components';\r\n\r\nexport const FormBlockContainer = styled.section`\r\n  position: relative;\r\n  padding: 1.5rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 0px 0 6rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormEntryWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 400px;\r\n`;\r\n\r\nexport const ContactContainer = styled.div`\r\n  padding: 5rem 0;\r\n`;\r\n\r\nexport const Contact = styled.section`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 1280px;\r\n`;\r\n\r\nexport const IconContainer = styled.div`\r\n  @media only screen and (min-width: 980px) {\r\n    padding: 10rem 7rem;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled.form`\r\n  width: 100%;\r\n  max-width: 520px;\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  display: block;\r\n  font-family: 'Ubuntu', sans-serif;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  text-align: end;\r\n  position: relative;\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\nimport { useForm, ValidationError } from \"@formspree/react\";\r\n\r\nimport PreviewImage from \"../../../common/PreviewImage\";\r\nimport Button from \"../../../common/Button\";\r\nimport Input from \"../../../common/Input\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst FormBlock = ({ title, content, button, icon, t, id }) => {\r\n  const scrollTo = id => {\r\n    const element = document.getElementById(id);\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\"\r\n    });\r\n  };\r\n  const [state, handleSubmit] = useForm(\"xqkwqzwa\");\r\n  // if (state.succeeded) {\r\n  //   return <p>Thanks! We will keep you updated!</p>;\r\n  // }\r\n  return (\r\n    <S.FormBlockContainer>\r\n      <Row type='flex' justify='space-between' align='middle' id={id}>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <Slide left>\r\n            <S.ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <S.Content>\r\n                {\r\n                  \"Stroll is a data-driven navigation app that allows pedestrians to map the safest route to their destination.\\n\"\r\n                }\r\n              </S.Content>\r\n              <S.Content>\r\n                {!state.succeeded\r\n                  ? \"We are releasing a beta for Berkeley soon! Sign up below to stay updated!\"\r\n                  : \"We are releasing a beta for Berkeley soon! Thanks for signing up, we will keep you updated!\"}\r\n              </S.Content>\r\n              {state.succeeded ? (\r\n                <div />\r\n              ) : (\r\n                <form onSubmit={handleSubmit}>\r\n                  <S.FormEntryWrapper>\r\n                    <Input\r\n                      type='email'\r\n                      name='email'\r\n                      id=''\r\n                      placeholder='Enter your email'\r\n                      value={\"\"}\r\n                      onChange={() => {}}\r\n                    />\r\n                    <Button\r\n                      type='submit'\r\n                      disabled={state.submitting}\r\n                      key={id}\r\n                      width='true'\r\n                    >\r\n                      {t(\"Stay Updated!\")}\r\n                    </Button>\r\n                  </S.FormEntryWrapper>\r\n                  <ValidationError\r\n                    style={{ color: \"red\" }}\r\n                    field='email'\r\n                    prefix='Input'\r\n                    errors={state.errors}\r\n                  />\r\n                </form>\r\n              )}\r\n            </S.ContentWrapper>\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={11} md={11} sm={12} xs={24}>\r\n          <Slide right>\r\n            <PreviewImage\r\n              src={icon}\r\n              className='about-block-image'\r\n              width='100%'\r\n              height='100%'\r\n            />\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </S.FormBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(FormBlock);\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  border-color: -internal-light-dark(rgb(118, 118, 118), rgb(133, 133, 133));\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  padding: 1rem 1.25rem;\r\n  transition: border-color 0.3s ease-in;\r\n  height: 60px;\r\n  border-radius: 8px;\r\n  color: #000;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    border-color: #2e186a;\r\n  }\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Input = ({ id, name, placeholder, onChange, t }) => (\r\n  <S.Container>\r\n    <label htmlFor={name}>{t(id)}</label>\r\n    <S.Input\r\n      spellcheck=\"false\"\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </S.Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n","import { lazy } from \"react\";\r\n\r\nimport IntroContent from \"../../content/IntroContent.json\";\r\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\r\nimport AboutContent from \"../../content/AboutContent.json\";\r\nimport MissionContent from \"../../content/MissionContent.json\";\r\nimport ProductContent from \"../../content/ProductContent.json\";\r\nimport ContactContent from \"../../content/ContactContent.json\";\r\nimport FormContentBlock from \"../../components/ContentBlock/FormContentBlock\";\r\n\r\nconst ContactFrom = lazy(() => import(\"../../components/ContactForm\"));\r\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst Container = lazy(() => import(\"../../common/Container\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container>\r\n      <ScrollToTop />\r\n      <FormContentBlock\r\n        type='right'\r\n        first='true'\r\n        title={IntroContent.title}\r\n        content={IntroContent.text}\r\n        button={IntroContent.button}\r\n        icon='phone.png'\r\n        id='intro'\r\n      />\r\n      {/*hide this section for now*/}\r\n      {false && (\r\n        <div>\r\n          <MiddleBlock\r\n            title={MiddleBlockContent.title}\r\n            content={MiddleBlockContent.text}\r\n            button={MiddleBlockContent.button}\r\n          />\r\n          <ContentBlock\r\n            type='left'\r\n            title={AboutContent.title}\r\n            content={AboutContent.text}\r\n            section={AboutContent.section}\r\n            icon='graphs.svg'\r\n            id='about'\r\n          />\r\n          <ContentBlock\r\n            type='right'\r\n            title={MissionContent.title}\r\n            content={MissionContent.text}\r\n            icon='product-launch.svg'\r\n            id='mission'\r\n          />\r\n          <ContentBlock\r\n            type='left'\r\n            title={ProductContent.title}\r\n            content={ProductContent.text}\r\n            icon='waving.svg'\r\n            id='product'\r\n          />\r\n          <ContactFrom\r\n            title={ContactContent.title}\r\n            content={ContactContent.text}\r\n            id='contact'\r\n          />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}