{"version":3,"sources":["common/SvgIcon/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/ContentBlock/LeftContentBlock/styles.js","components/ContentBlock/LeftContentBlock/index.js","components/ContentBlock/RightContentBlock/styles.js","components/ContentBlock/RightContentBlock/index.js","components/ContentBlock/index.js"],"names":["SvgIcon","src","width","height","alt","with","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","LeftContentBlock","styled","section","Content","p","ContentWrapper","div","ServiceWrapper","MinTitle","h6","MinPara","Col","withTranslation","icon","title","content","t","id","type","justify","align","lg","md","sm","xs","left","className","right","map","item","span","RightBlockContainer","ButtonWrapper","button","Button","color","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","ContentBlock","props","RightContentBlock","FormContentBlock"],"mappings":"wIAIeA,UAJC,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAf,OACd,qBAAKF,IAAG,mBAAcA,GAAOG,IAAKH,EAAKI,KAAMH,EAAOC,OAAQA,M,iCCD/C,SAASG,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAZT,mC,iCCAA,+CAEA,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,YAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,I,+IC9BIQ,EAAmBC,IAAOC,QAAV,iKAShBC,EAAUF,IAAOG,EAAV,wDAIPC,EAAiBJ,IAAOK,IAAV,mJASdC,EAAiBN,IAAOK,IAAV,qGAMdE,EAAWP,IAAOQ,GAAV,4FAMRC,EAAUT,IAAOG,EAAV,mD,GAIOH,YAAOU,IAAPV,CAAH,sE,MCSTW,iBA1CU,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAASb,EAAqB,EAArBA,QAASc,EAAY,EAAZA,EAAGC,EAAS,EAATA,GAC5D,OACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAKC,KAAK,OAAOC,QAAQ,gBAAgBC,MAAM,SAASH,GAAIA,EAA5D,UACE,cAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOC,MAAI,EAAX,SACE,cAAC5D,EAAA,QAAD,CACEC,IAAK+C,EACLa,UAAU,oBACV3D,MAAM,OACNC,OAAO,aAIb,cAAC,IAAD,CAAKqD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOG,OAAK,EAAZ,SACE,eAAC,EAAD,WACE,6BAAKX,EAAEF,KACP,cAAC,EAAD,UAAYE,EAAED,KACd,cAAC,EAAD,UACE,cAAC,IAAD,CAAKG,KAAK,OAAOC,QAAQ,gBAAzB,SACGjB,GACoB,kBAAZA,GACPA,EAAQ0B,KAAI,SAACC,EAAMZ,GACjB,OACE,eAAC,IAAD,CAAca,KAAM,GAApB,UACE,cAACjE,EAAA,QAAD,CAASC,IAAK+D,EAAKhB,KAAM9C,MAAM,OAAOC,OAAO,SAC7C,cAAC,EAAD,UAAagD,EAAEa,EAAKf,SACpB,cAAC,EAAD,UAAYE,EAAEa,EAAKd,aAHXE,yB,SC/BrBc,EAAsB9B,IAAOC,QAAV,iKASnBC,EAAUF,IAAOG,EAAV,wDAIPC,EAAiBJ,IAAOK,IAAV,mJASd0B,EAAgB/B,IAAOK,IAAV,sGCkCXM,iBAjDI,SAAC,GAA6C,IAA3CE,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,QAASkB,EAA0B,EAA1BA,OAAQpB,EAAkB,EAAlBA,KAAMG,EAAY,EAAZA,EAAGC,EAAS,EAATA,GAOrD,OACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAKC,KAAK,OAAOC,QAAQ,gBAAgBC,MAAM,SAASH,GAAIA,EAA5D,UACE,cAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOC,MAAI,EAAX,SACE,eAAC,EAAD,WACE,6BAAKT,EAAEF,KACP,cAAC,EAAD,UAAYE,EAAED,KACd,cAAC,EAAD,UACGkB,GACmB,kBAAXA,GACPA,EAAOL,KAAI,SAACC,EAAMZ,GAChB,OACE,cAACiB,EAAA,QAAD,CAEEC,MAAON,EAAKM,MACZpE,MAAM,OACNqE,QAAS,kBAvBd,SAACnB,GACAoB,SAASC,eAAerB,GAChCsB,eAAe,CACrBC,SAAU,WAoBuBC,CAAS,UAJ1B,SAMGzB,EAAEa,EAAKf,QALHG,eAarB,cAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOG,OAAK,EAAZ,SACE,cAAC9D,EAAA,QAAD,CACEC,IAAK+C,EACLa,UAAU,oBACV3D,MAAM,OACNC,OAAO,qB,SCtCN0E,UAPM,SAAAC,GACnB,MAAmB,SAAfA,EAAMzB,KAAwB,cAAC,EAAD,eAAsByB,IACrC,UAAfA,EAAMzB,KAAyB,cAAC0B,EAAD,eAAuBD,IACvC,SAAfA,EAAMzB,KAAwB,cAAC2B,EAAA,EAAD,eAAsBF,IACjD","file":"static/js/8.2a5a764c.chunk.js","sourcesContent":["const SvgIcon = ({ src, width, height }) => (\r\n  <img src={`/img/svg/${src}`} alt={src} with={width} height={height} />\r\n);\r\n\r\nexport default SvgIcon;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import styled from 'styled-components';\r\nimport { Col } from 'antd';\r\n\r\nexport const LeftContentBlock = styled.section`\r\n  position: relative;\r\n  padding: 10rem 35px 8rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled.h6`\r\n  font-size: 1rem;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n`;\r\n\r\nexport const MinPara = styled.p`\r\n  font-size: 0.75rem;\r\n`;\r\n\r\nexport const ServiceItem = styled(Col)`\r\n  margin: 2rem 0;\r\n  position: relative;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nimport SvgIcon from \"../../../common/SvgIcon\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst LeftContentBlock = ({ icon, title, content, section, t, id }) => {\r\n  return (\r\n    <S.LeftContentBlock>\r\n      <Row type=\"flex\" justify=\"space-between\" align=\"middle\" id={id}>\r\n        <Col lg={11} md={11} sm={12} xs={24}>\r\n          <Slide left>\r\n            <SvgIcon\r\n              src={icon}\r\n              className=\"about-block-image\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <Slide right>\r\n            <S.ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <S.Content>{t(content)}</S.Content>\r\n              <S.ServiceWrapper>\r\n                <Row type=\"flex\" justify=\"space-between\">\r\n                  {section &&\r\n                    typeof section === \"object\" &&\r\n                    section.map((item, id) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <S.MinTitle>{t(item.title)}</S.MinTitle>\r\n                          <S.MinPara>{t(item.content)}</S.MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </S.ServiceWrapper>\r\n            </S.ContentWrapper>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </S.LeftContentBlock>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from 'styled-components';\r\n\r\nexport const RightBlockContainer = styled.section`\r\n  position: relative;\r\n  padding: 10rem 35px 8rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 400px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nimport SvgIcon from \"../../../common/SvgIcon\";\r\nimport Button from \"../../../common/Button\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst RightBlock = ({ title, content, button, icon, t, id }) => {\r\n  const scrollTo = (id) => {\r\n    const element = document.getElementById(id);\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <S.RightBlockContainer>\r\n      <Row type=\"flex\" justify=\"space-between\" align=\"middle\" id={id}>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <Slide left>\r\n            <S.ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <S.Content>{t(content)}</S.Content>\r\n              <S.ButtonWrapper>\r\n                {button &&\r\n                  typeof button === \"object\" &&\r\n                  button.map((item, id) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        width=\"true\"\r\n                        onClick={() => scrollTo(\"about\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </S.ButtonWrapper>\r\n            </S.ContentWrapper>\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={11} md={11} sm={12} xs={24}>\r\n          <Slide right>\r\n            <SvgIcon\r\n              src={icon}\r\n              className=\"about-block-image\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </S.RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport FormContentBlock from \"./FormContentBlock\";\r\n\r\nconst ContentBlock = props => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  if (props.type === \"form\") return <FormContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"sourceRoot":""}